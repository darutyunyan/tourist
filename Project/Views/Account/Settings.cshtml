@model Project.ModelView.AccountInformationViewModel
@using Project.ModelView;

@section Title{
    Tourist | Settings
}

@section HeaderMenu {
    @Html.Partial("HeaderMenu", "Settings")
}

@{
    ChagePasswordViewModel changePasswordViewModel = new ChagePasswordViewModel();
}

@section Content {
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 pull-right">
                <h2>Settings</h2>
                <hr />
                <div class="row mt-10">
                    <div class="col-md-12 col-xs-12 col-sm-12">
                        <ul class="nav nav-pills">
                            <li id="btnAccountInformation" class="active"><a href="#">ACCOUNT</a></li>
                            <li id="btnChangePassword"><a href="#">PASSWORD</a></li>
                        </ul>
                    </div>
                </div>
                <div id="settingError" class="alert alert-danger mt-10 hidden"></div>
                <div id="settingSuccess" class="alert alert-success mt-10" style="display:none;">
                    <button type="button" class="close" data-dismiss="alert">x</button>
                     Information successfully changed!
                </div>
                <div id="accountInformationBlock">
                    <div class="form-horizontal mt-20">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5 text-align-none" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { id = "firstName", @class = "form-control" } })
                                <span id="firstNameError" class="hidden error-field"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5 text-align-none" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { id = "lastName", @class = "form-control" } })
                                <span id="lastNameError" class="hidden error-field"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-5 text-align-none" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { id = "country", @class = "form-control" } })
                                <span id="countryError" class="hidden error-field"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <button type="button" id="butAddRoutes" class="btn btn-primary pull-right" onclick="changeAccountInformation()">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="changePasswordBlock" class="hidden">
                    @Html.Partial("ChangePassword", changePasswordViewModel)
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        $('#btnAccountInformation').click(function () {
            $('#accountInformationBlock').removeClass('hidden');
            $('#changePasswordBlock').addClass('hidden');
            $('#btnAccountInformation').addClass('active');
            $('#btnChangePassword').removeClass('active');

            clearCommonErrorMessage('settingError');
        });

        $('#btnChangePassword').click(function () {
            $('#accountInformationBlock').addClass('hidden');
            $('#changePasswordBlock').removeClass('hidden');
            $('#btnChangePassword').addClass('active');
            $('#btnAccountInformation').removeClass('active');

            clearPasswordFields();
            clearCommonErrorMessage('settingError');
        });

        function changePassword() {
            clearErrorMessage("currentPasswordError", "currentPassword");
            clearErrorMessage("newPasswordError", "newPassword");
            clearErrorMessage("newPasswordConfirmError", "newPasswordConfirm");
            clearCommonErrorMessage('settingError');

            var settingModel = {};
            settingModel.CurrentPassword = $('#currentPassword').val();
            settingModel.NewPassword = $('#newPassword').val();
            settingModel.NewPasswordConfirm = $('#newPasswordConfirm').val();

            $.ajax({
                type: "POST",
                url: "/Account/ChangePassword",
                data: JSON.stringify(settingModel),
                contentType: "application/json; charset=utf-8",
            }).done(function (data) {
                if (data.IsError) {
                    if (data.CurrentPasswordError != null)
                        setErrorMessage("currentPasswordError", "currentPassword", data.CurrentPasswordError);

                    if (data.NewPasswordError != null)
                        setErrorMessage("newPasswordError", "newPassword", data.NewPasswordError);

                    if (data.NewPasswordConfirmError != null)
                        setErrorMessage("newPasswordConfirmError", "newPasswordConfirm", data.NewPasswordConfirmError);

                } else if (data.IsExceptionError) {
                    setCommonErrorMessage('settingError', data.ErrorMessage);
                } else {
                    setSuccessMessage('settingSuccess');
                }
            }).fail(function (error) {
                setCommonErrorMessage('settingError', error.statusText);
            });
        }

        function changeAccountInformation() {
            clearErrorMessage("firstNameError", "firstName");
            clearErrorMessage("lastNameError", "lastName");
            clearErrorMessage("countryError", "country");
            clearCommonErrorMessage('settingError');

            var settingModel = {};
            settingModel.FirstName = $('#firstName').val();
            settingModel.LastName = $('#lastName').val();
            settingModel.Country = $('#country').val();

            $.ajax({
                type: "POST",
                url: "/Account/ChangeAccountInformation",
                data: JSON.stringify(settingModel),
                contentType: "application/json; charset=utf-8",
            }).done(function (data) {
                if (data.IsError) {
                    if (data.FirstNameError != null)
                        setErrorMessage("firstNameError", "firstName", data.FirstNameError);

                    if (data.LastNameError != null)
                        setErrorMessage("lastNameError", "lastName", data.LastNameError);

                    if (data.CountryError != null)
                        setErrorMessage("countryError", "country", data.CountryError);

                } else if (data.IsExceptionError) {
                    setCommonErrorMessage('settingError', data.ErrorMessage);
                } else {
                    setSuccessMessage('settingSuccess');
                }
            }).fail(function (error) {
                setCommonErrorMessage('settingError', error.statusText);
            });
        }

        function clearPasswordFields() {
            $('#currentPassword').val('');
            $('#newPassword').val('');
            $('#newPasswordConfirm').val('');
        }

        function setSuccessMessage(id) {
            $("#" + id).fadeTo(2000, 500).slideUp(500, function () {
                $("#" + id).slideUp(500);
            });
        }

        function setErrorMessage(idErrorMessage, idInputField, message) {
            $('#' + idInputField).addClass('error-input');
            $('#' + idErrorMessage).text(message);
            $('#' + idErrorMessage).removeClass('hidden');
        }

        function clearErrorMessage(idErrorMessage, idInputField) {
            $('#' + idInputField).removeClass('error-input');
            $('#' + idErrorMessage).text('');
            $('#' + idErrorMessage).addClass('hidden');
        }

        function setCommonErrorMessage(id, message) {
            $('#' + id).removeClass('hidden');
            $('#' + id).text(message);
        }

        function clearCommonErrorMessage(id) {
            $('#' + id).addClass('hidden');
            $('#' + id).text('');
        }
    </script>
}